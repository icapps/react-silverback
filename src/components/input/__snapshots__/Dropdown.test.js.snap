// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dropdown Component should render a Dropdown component 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dropdown
    handleChange={[Function]}
    id="test"
    isLabelShown={true}
    label="This is a dropdown"
    options={
        Array [
            Object {
              "key": "test",
              "text": "test",
            },
            Object {
              "key": "test2",
              "text": "test2",
            },
            Object {
              "key": "test3",
              "text": "test3",
            },
          ]
    }
    value="test"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <label
          htmlFor="test"
>
          This is a dropdown
</label>,
        <select
          className="form-control"
          id="test"
          onChange={[Function]}
          value="test"
>
          <option
                    value="test"
          >
                    test
          </option>
          <option
                    value="test2"
          >
                    test2
          </option>
          <option
                    value="test3"
          >
                    test3
          </option>
</select>,
      ],
      "className": "form-group",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "This is a dropdown",
          "htmlFor": "test",
        },
        "ref": null,
        "rendered": "This is a dropdown",
        "type": "label",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <option
              value="test"
>
              test
</option>,
            <option
              value="test2"
>
              test2
</option>,
            <option
              value="test3"
>
              test3
</option>,
          ],
          "className": "form-control",
          "id": "test",
          "onChange": [Function],
          "value": "test",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "test",
            "nodeType": "host",
            "props": Object {
              "children": "test",
              "value": "test",
            },
            "ref": null,
            "rendered": "test",
            "type": "option",
          },
          Object {
            "instance": null,
            "key": "test2",
            "nodeType": "host",
            "props": Object {
              "children": "test2",
              "value": "test2",
            },
            "ref": null,
            "rendered": "test2",
            "type": "option",
          },
          Object {
            "instance": null,
            "key": "test3",
            "nodeType": "host",
            "props": Object {
              "children": "test3",
              "value": "test3",
            },
            "ref": null,
            "rendered": "test3",
            "type": "option",
          },
        ],
        "type": "select",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <label
            htmlFor="test"
>
            This is a dropdown
</label>,
          <select
            className="form-control"
            id="test"
            onChange={[Function]}
            value="test"
>
            <option
                        value="test"
            >
                        test
            </option>
            <option
                        value="test2"
            >
                        test2
            </option>
            <option
                        value="test3"
            >
                        test3
            </option>
</select>,
        ],
        "className": "form-group",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "This is a dropdown",
            "htmlFor": "test",
          },
          "ref": null,
          "rendered": "This is a dropdown",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <option
                value="test"
>
                test
</option>,
              <option
                value="test2"
>
                test2
</option>,
              <option
                value="test3"
>
                test3
</option>,
            ],
            "className": "form-control",
            "id": "test",
            "onChange": [Function],
            "value": "test",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "test",
              "nodeType": "host",
              "props": Object {
                "children": "test",
                "value": "test",
              },
              "ref": null,
              "rendered": "test",
              "type": "option",
            },
            Object {
              "instance": null,
              "key": "test2",
              "nodeType": "host",
              "props": Object {
                "children": "test2",
                "value": "test2",
              },
              "ref": null,
              "rendered": "test2",
              "type": "option",
            },
            Object {
              "instance": null,
              "key": "test3",
              "nodeType": "host",
              "props": Object {
                "children": "test3",
                "value": "test3",
              },
              "ref": null,
              "rendered": "test3",
              "type": "option",
            },
          ],
          "type": "select",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
