// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Overview Component should render an Overview component 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Overview
    history={Object {}}
    keys={
        Array [
            Object {
              "id": "id",
              "isSortable": true,
              "value": "id",
            },
            Object {
              "id": "type",
              "isSortable": true,
              "value": "type",
            },
            Object {
              "id": "price",
              "isSortable": false,
              "value": "price",
            },
          ]
    }
    listItems={
        Array [
            Object {
              "id": "1",
              "price": 88.9,
              "type": "B",
            },
            Object {
              "id": "2",
              "price": 45.2,
              "type": "C",
            },
            Object {
              "id": "1",
              "price": 56.5,
              "type": "D",
            },
          ]
    }
    paginationConfig={
        Object {
            "pageLimit": 10,
            "totalCount": 100,
          }
    }
    removeItem={[Function]}
    sortItems={[Function]}
    title="DataTypes"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="container"
>
        <h2>
                DataTypes
        </h2>
        <div
                className="overview-settings"
        >
                <Button
                        className="btn-success"
                        handleClick={[Function]}
                        text="+ Create DataTypes"
                />
        </div>
        <Pagination
                handleClick={[Function]}
                totalCount={100}
        />
        <Table
                dateFormat="DD/MM/YYYY"
                handleRemoveItem={[Function]}
                handleRowClick={[Function]}
                handleSort={[Function]}
                keys={
                        Array [
                                Object {
                                  "id": "id",
                                  "isSortable": true,
                                  "value": "id",
                                },
                                Object {
                                  "id": "type",
                                  "isSortable": true,
                                  "value": "type",
                                },
                                Object {
                                  "id": "price",
                                  "isSortable": false,
                                  "value": "price",
                                },
                              ]
                }
                listItems={
                        Array [
                                Object {
                                  "id": "1",
                                  "price": 88.9,
                                  "type": "B",
                                },
                                Object {
                                  "id": "2",
                                  "price": 45.2,
                                  "type": "C",
                                },
                                Object {
                                  "id": "1",
                                  "price": 56.5,
                                  "type": "D",
                                },
                              ]
                }
                maxTextLength={50}
        />
</div>,
      "className": "overview col-sm-9 offset-sm-3 col-md-10 offset-md-2 pt-3",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h2>
            DataTypes
</h2>,
          <div
            className="overview-settings"
>
            <Button
                        className="btn-success"
                        handleClick={[Function]}
                        text="+ Create DataTypes"
            />
</div>,
          <Pagination
            handleClick={[Function]}
            totalCount={100}
/>,
          <Table
            dateFormat="DD/MM/YYYY"
            handleRemoveItem={[Function]}
            handleRowClick={[Function]}
            handleSort={[Function]}
            keys={
                        Array [
                                    Object {
                                      "id": "id",
                                      "isSortable": true,
                                      "value": "id",
                                    },
                                    Object {
                                      "id": "type",
                                      "isSortable": true,
                                      "value": "type",
                                    },
                                    Object {
                                      "id": "price",
                                      "isSortable": false,
                                      "value": "price",
                                    },
                                  ]
            }
            listItems={
                        Array [
                                    Object {
                                      "id": "1",
                                      "price": 88.9,
                                      "type": "B",
                                    },
                                    Object {
                                      "id": "2",
                                      "price": 45.2,
                                      "type": "C",
                                    },
                                    Object {
                                      "id": "1",
                                      "price": 56.5,
                                      "type": "D",
                                    },
                                  ]
            }
            maxTextLength={50}
/>,
        ],
        "className": "container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "DataTypes",
              null,
            ],
          },
          "ref": null,
          "rendered": Array [
            "DataTypes",
            null,
          ],
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Button
              className="btn-success"
              handleClick={[Function]}
              text="+ Create DataTypes"
/>,
            "className": "overview-settings",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "btn-success",
              "handleClick": [Function],
              "text": "+ Create DataTypes",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "handleClick": [Function],
            "totalCount": 100,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "dateFormat": "DD/MM/YYYY",
            "handleRemoveItem": [Function],
            "handleRowClick": [Function],
            "handleSort": [Function],
            "keys": Array [
              Object {
                "id": "id",
                "isSortable": true,
                "value": "id",
              },
              Object {
                "id": "type",
                "isSortable": true,
                "value": "type",
              },
              Object {
                "id": "price",
                "isSortable": false,
                "value": "price",
              },
            ],
            "listItems": Array [
              Object {
                "id": "1",
                "price": 88.9,
                "type": "B",
              },
              Object {
                "id": "2",
                "price": 45.2,
                "type": "C",
              },
              Object {
                "id": "1",
                "price": 56.5,
                "type": "D",
              },
            ],
            "maxTextLength": 50,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
    "type": "main",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="container"
>
          <h2>
                    DataTypes
          </h2>
          <div
                    className="overview-settings"
          >
                    <Button
                              className="btn-success"
                              handleClick={[Function]}
                              text="+ Create DataTypes"
                    />
          </div>
          <Pagination
                    handleClick={[Function]}
                    totalCount={100}
          />
          <Table
                    dateFormat="DD/MM/YYYY"
                    handleRemoveItem={[Function]}
                    handleRowClick={[Function]}
                    handleSort={[Function]}
                    keys={
                              Array [
                                        Object {
                                          "id": "id",
                                          "isSortable": true,
                                          "value": "id",
                                        },
                                        Object {
                                          "id": "type",
                                          "isSortable": true,
                                          "value": "type",
                                        },
                                        Object {
                                          "id": "price",
                                          "isSortable": false,
                                          "value": "price",
                                        },
                                      ]
                    }
                    listItems={
                              Array [
                                        Object {
                                          "id": "1",
                                          "price": 88.9,
                                          "type": "B",
                                        },
                                        Object {
                                          "id": "2",
                                          "price": 45.2,
                                          "type": "C",
                                        },
                                        Object {
                                          "id": "1",
                                          "price": 56.5,
                                          "type": "D",
                                        },
                                      ]
                    }
                    maxTextLength={50}
          />
</div>,
        "className": "overview col-sm-9 offset-sm-3 col-md-10 offset-md-2 pt-3",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h2>
              DataTypes
</h2>,
            <div
              className="overview-settings"
>
              <Button
                            className="btn-success"
                            handleClick={[Function]}
                            text="+ Create DataTypes"
              />
</div>,
            <Pagination
              handleClick={[Function]}
              totalCount={100}
/>,
            <Table
              dateFormat="DD/MM/YYYY"
              handleRemoveItem={[Function]}
              handleRowClick={[Function]}
              handleSort={[Function]}
              keys={
                            Array [
                                          Object {
                                            "id": "id",
                                            "isSortable": true,
                                            "value": "id",
                                          },
                                          Object {
                                            "id": "type",
                                            "isSortable": true,
                                            "value": "type",
                                          },
                                          Object {
                                            "id": "price",
                                            "isSortable": false,
                                            "value": "price",
                                          },
                                        ]
              }
              listItems={
                            Array [
                                          Object {
                                            "id": "1",
                                            "price": 88.9,
                                            "type": "B",
                                          },
                                          Object {
                                            "id": "2",
                                            "price": 45.2,
                                            "type": "C",
                                          },
                                          Object {
                                            "id": "1",
                                            "price": 56.5,
                                            "type": "D",
                                          },
                                        ]
              }
              maxTextLength={50}
/>,
          ],
          "className": "container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "DataTypes",
                null,
              ],
            },
            "ref": null,
            "rendered": Array [
              "DataTypes",
              null,
            ],
            "type": "h2",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Button
                className="btn-success"
                handleClick={[Function]}
                text="+ Create DataTypes"
/>,
              "className": "overview-settings",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "btn-success",
                "handleClick": [Function],
                "text": "+ Create DataTypes",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "handleClick": [Function],
              "totalCount": 100,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "dateFormat": "DD/MM/YYYY",
              "handleRemoveItem": [Function],
              "handleRowClick": [Function],
              "handleSort": [Function],
              "keys": Array [
                Object {
                  "id": "id",
                  "isSortable": true,
                  "value": "id",
                },
                Object {
                  "id": "type",
                  "isSortable": true,
                  "value": "type",
                },
                Object {
                  "id": "price",
                  "isSortable": false,
                  "value": "price",
                },
              ],
              "listItems": Array [
                Object {
                  "id": "1",
                  "price": 88.9,
                  "type": "B",
                },
                Object {
                  "id": "2",
                  "price": 45.2,
                  "type": "C",
                },
                Object {
                  "id": "1",
                  "price": 56.5,
                  "type": "D",
                },
              ],
              "maxTextLength": 50,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": "main",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Overview Component should render an Overview component with custom date format 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Overview
    history={Object {}}
    keys={
        Array [
            Object {
              "id": "id",
              "isSortable": true,
              "value": "id",
            },
            Object {
              "id": "type",
              "isSortable": true,
              "value": "type",
            },
            Object {
              "id": "date",
              "isSortable": false,
              "value": "date",
            },
          ]
    }
    listItems={
        Array [
            Object {
              "date": 1995-05-23T00:00:00.000Z,
              "id": "1",
              "type": "B",
            },
            Object {
              "date": 1995-05-23T00:00:00.000Z,
              "id": "2",
              "type": "C",
            },
            Object {
              "date": 1995-05-23T00:00:00.000Z,
              "id": "1",
              "type": "D",
            },
          ]
    }
    paginationConfig={
        Object {
            "pageLimit": 10,
            "totalCount": 100,
          }
    }
    removeItem={[Function]}
    sortItems={[Function]}
    title="DataTypes"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="container"
>
        <h2>
                DataTypes
        </h2>
        <div
                className="overview-settings"
        >
                <Button
                        className="btn-success"
                        handleClick={[Function]}
                        text="+ Create DataTypes"
                />
        </div>
        <Pagination
                handleClick={[Function]}
                totalCount={100}
        />
        <Table
                dateFormat="DD/MM/YYYY"
                handleRemoveItem={[Function]}
                handleRowClick={[Function]}
                handleSort={[Function]}
                keys={
                        Array [
                                Object {
                                  "id": "id",
                                  "isSortable": true,
                                  "value": "id",
                                },
                                Object {
                                  "id": "type",
                                  "isSortable": true,
                                  "value": "type",
                                },
                                Object {
                                  "id": "date",
                                  "isSortable": false,
                                  "value": "date",
                                },
                              ]
                }
                listItems={
                        Array [
                                Object {
                                  "date": 1995-05-23T00:00:00.000Z,
                                  "id": "1",
                                  "type": "B",
                                },
                                Object {
                                  "date": 1995-05-23T00:00:00.000Z,
                                  "id": "2",
                                  "type": "C",
                                },
                                Object {
                                  "date": 1995-05-23T00:00:00.000Z,
                                  "id": "1",
                                  "type": "D",
                                },
                              ]
                }
                maxTextLength={50}
        />
</div>,
      "className": "overview col-sm-9 offset-sm-3 col-md-10 offset-md-2 pt-3",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h2>
            DataTypes
</h2>,
          <div
            className="overview-settings"
>
            <Button
                        className="btn-success"
                        handleClick={[Function]}
                        text="+ Create DataTypes"
            />
</div>,
          <Pagination
            handleClick={[Function]}
            totalCount={100}
/>,
          <Table
            dateFormat="DD/MM/YYYY"
            handleRemoveItem={[Function]}
            handleRowClick={[Function]}
            handleSort={[Function]}
            keys={
                        Array [
                                    Object {
                                      "id": "id",
                                      "isSortable": true,
                                      "value": "id",
                                    },
                                    Object {
                                      "id": "type",
                                      "isSortable": true,
                                      "value": "type",
                                    },
                                    Object {
                                      "id": "date",
                                      "isSortable": false,
                                      "value": "date",
                                    },
                                  ]
            }
            listItems={
                        Array [
                                    Object {
                                      "date": 1995-05-23T00:00:00.000Z,
                                      "id": "1",
                                      "type": "B",
                                    },
                                    Object {
                                      "date": 1995-05-23T00:00:00.000Z,
                                      "id": "2",
                                      "type": "C",
                                    },
                                    Object {
                                      "date": 1995-05-23T00:00:00.000Z,
                                      "id": "1",
                                      "type": "D",
                                    },
                                  ]
            }
            maxTextLength={50}
/>,
        ],
        "className": "container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "DataTypes",
              null,
            ],
          },
          "ref": null,
          "rendered": Array [
            "DataTypes",
            null,
          ],
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Button
              className="btn-success"
              handleClick={[Function]}
              text="+ Create DataTypes"
/>,
            "className": "overview-settings",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "btn-success",
              "handleClick": [Function],
              "text": "+ Create DataTypes",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "handleClick": [Function],
            "totalCount": 100,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "dateFormat": "DD/MM/YYYY",
            "handleRemoveItem": [Function],
            "handleRowClick": [Function],
            "handleSort": [Function],
            "keys": Array [
              Object {
                "id": "id",
                "isSortable": true,
                "value": "id",
              },
              Object {
                "id": "type",
                "isSortable": true,
                "value": "type",
              },
              Object {
                "id": "date",
                "isSortable": false,
                "value": "date",
              },
            ],
            "listItems": Array [
              Object {
                "date": 1995-05-23T00:00:00.000Z,
                "id": "1",
                "type": "B",
              },
              Object {
                "date": 1995-05-23T00:00:00.000Z,
                "id": "2",
                "type": "C",
              },
              Object {
                "date": 1995-05-23T00:00:00.000Z,
                "id": "1",
                "type": "D",
              },
            ],
            "maxTextLength": 50,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
    "type": "main",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="container"
>
          <h2>
                    DataTypes
          </h2>
          <div
                    className="overview-settings"
          >
                    <Button
                              className="btn-success"
                              handleClick={[Function]}
                              text="+ Create DataTypes"
                    />
          </div>
          <Pagination
                    handleClick={[Function]}
                    totalCount={100}
          />
          <Table
                    dateFormat="DD/MM/YYYY"
                    handleRemoveItem={[Function]}
                    handleRowClick={[Function]}
                    handleSort={[Function]}
                    keys={
                              Array [
                                        Object {
                                          "id": "id",
                                          "isSortable": true,
                                          "value": "id",
                                        },
                                        Object {
                                          "id": "type",
                                          "isSortable": true,
                                          "value": "type",
                                        },
                                        Object {
                                          "id": "date",
                                          "isSortable": false,
                                          "value": "date",
                                        },
                                      ]
                    }
                    listItems={
                              Array [
                                        Object {
                                          "date": 1995-05-23T00:00:00.000Z,
                                          "id": "1",
                                          "type": "B",
                                        },
                                        Object {
                                          "date": 1995-05-23T00:00:00.000Z,
                                          "id": "2",
                                          "type": "C",
                                        },
                                        Object {
                                          "date": 1995-05-23T00:00:00.000Z,
                                          "id": "1",
                                          "type": "D",
                                        },
                                      ]
                    }
                    maxTextLength={50}
          />
</div>,
        "className": "overview col-sm-9 offset-sm-3 col-md-10 offset-md-2 pt-3",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h2>
              DataTypes
</h2>,
            <div
              className="overview-settings"
>
              <Button
                            className="btn-success"
                            handleClick={[Function]}
                            text="+ Create DataTypes"
              />
</div>,
            <Pagination
              handleClick={[Function]}
              totalCount={100}
/>,
            <Table
              dateFormat="DD/MM/YYYY"
              handleRemoveItem={[Function]}
              handleRowClick={[Function]}
              handleSort={[Function]}
              keys={
                            Array [
                                          Object {
                                            "id": "id",
                                            "isSortable": true,
                                            "value": "id",
                                          },
                                          Object {
                                            "id": "type",
                                            "isSortable": true,
                                            "value": "type",
                                          },
                                          Object {
                                            "id": "date",
                                            "isSortable": false,
                                            "value": "date",
                                          },
                                        ]
              }
              listItems={
                            Array [
                                          Object {
                                            "date": 1995-05-23T00:00:00.000Z,
                                            "id": "1",
                                            "type": "B",
                                          },
                                          Object {
                                            "date": 1995-05-23T00:00:00.000Z,
                                            "id": "2",
                                            "type": "C",
                                          },
                                          Object {
                                            "date": 1995-05-23T00:00:00.000Z,
                                            "id": "1",
                                            "type": "D",
                                          },
                                        ]
              }
              maxTextLength={50}
/>,
          ],
          "className": "container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "DataTypes",
                null,
              ],
            },
            "ref": null,
            "rendered": Array [
              "DataTypes",
              null,
            ],
            "type": "h2",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Button
                className="btn-success"
                handleClick={[Function]}
                text="+ Create DataTypes"
/>,
              "className": "overview-settings",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "btn-success",
                "handleClick": [Function],
                "text": "+ Create DataTypes",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "handleClick": [Function],
              "totalCount": 100,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "dateFormat": "DD/MM/YYYY",
              "handleRemoveItem": [Function],
              "handleRowClick": [Function],
              "handleSort": [Function],
              "keys": Array [
                Object {
                  "id": "id",
                  "isSortable": true,
                  "value": "id",
                },
                Object {
                  "id": "type",
                  "isSortable": true,
                  "value": "type",
                },
                Object {
                  "id": "date",
                  "isSortable": false,
                  "value": "date",
                },
              ],
              "listItems": Array [
                Object {
                  "date": 1995-05-23T00:00:00.000Z,
                  "id": "1",
                  "type": "B",
                },
                Object {
                  "date": 1995-05-23T00:00:00.000Z,
                  "id": "2",
                  "type": "C",
                },
                Object {
                  "date": 1995-05-23T00:00:00.000Z,
                  "id": "1",
                  "type": "D",
                },
              ],
              "maxTextLength": 50,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": "main",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Overview Component should render an Overview component with no listItems 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Overview
    history={Object {}}
    keys={
        Array [
            Object {
              "id": "id",
              "isSortable": true,
              "value": "id",
            },
            Object {
              "id": "type",
              "isSortable": true,
              "value": "type",
            },
            Object {
              "id": "price",
              "isSortable": false,
              "value": "price",
            },
          ]
    }
    listItems={Array []}
    paginationConfig={
        Object {
            "pageLimit": 10,
            "totalCount": 100,
          }
    }
    removeItem={[Function]}
    sortItems={[Function]}
    title="DataTypes"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="container"
>
        <h2>
                DataTypes
        </h2>
        <div
                className="overview-settings"
        >
                <Button
                        className="btn-success"
                        handleClick={[Function]}
                        text="+ Create DataTypes"
                />
        </div>
        <Pagination
                handleClick={[Function]}
                totalCount={100}
        />
        <div
                className="jumbotron"
                role="alert"
        >
                <span
                        className="empty-overview"
                >
                        No DataTypes found ...
                </span>
        </div>
</div>,
      "className": "overview col-sm-9 offset-sm-3 col-md-10 offset-md-2 pt-3",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h2>
            DataTypes
</h2>,
          <div
            className="overview-settings"
>
            <Button
                        className="btn-success"
                        handleClick={[Function]}
                        text="+ Create DataTypes"
            />
</div>,
          <Pagination
            handleClick={[Function]}
            totalCount={100}
/>,
          <div
            className="jumbotron"
            role="alert"
>
            <span
                        className="empty-overview"
            >
                        No DataTypes found ...
            </span>
</div>,
        ],
        "className": "container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "DataTypes",
              null,
            ],
          },
          "ref": null,
          "rendered": Array [
            "DataTypes",
            null,
          ],
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Button
              className="btn-success"
              handleClick={[Function]}
              text="+ Create DataTypes"
/>,
            "className": "overview-settings",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "btn-success",
              "handleClick": [Function],
              "text": "+ Create DataTypes",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "handleClick": [Function],
            "totalCount": 100,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <span
              className="empty-overview"
>
              No DataTypes found ...
</span>,
            "className": "jumbotron",
            "role": "alert",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "No DataTypes found ...",
              "className": "empty-overview",
            },
            "ref": null,
            "rendered": "No DataTypes found ...",
            "type": "span",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "main",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="container"
>
          <h2>
                    DataTypes
          </h2>
          <div
                    className="overview-settings"
          >
                    <Button
                              className="btn-success"
                              handleClick={[Function]}
                              text="+ Create DataTypes"
                    />
          </div>
          <Pagination
                    handleClick={[Function]}
                    totalCount={100}
          />
          <div
                    className="jumbotron"
                    role="alert"
          >
                    <span
                              className="empty-overview"
                    >
                              No DataTypes found ...
                    </span>
          </div>
</div>,
        "className": "overview col-sm-9 offset-sm-3 col-md-10 offset-md-2 pt-3",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h2>
              DataTypes
</h2>,
            <div
              className="overview-settings"
>
              <Button
                            className="btn-success"
                            handleClick={[Function]}
                            text="+ Create DataTypes"
              />
</div>,
            <Pagination
              handleClick={[Function]}
              totalCount={100}
/>,
            <div
              className="jumbotron"
              role="alert"
>
              <span
                            className="empty-overview"
              >
                            No DataTypes found ...
              </span>
</div>,
          ],
          "className": "container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "DataTypes",
                null,
              ],
            },
            "ref": null,
            "rendered": Array [
              "DataTypes",
              null,
            ],
            "type": "h2",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Button
                className="btn-success"
                handleClick={[Function]}
                text="+ Create DataTypes"
/>,
              "className": "overview-settings",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "btn-success",
                "handleClick": [Function],
                "text": "+ Create DataTypes",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "handleClick": [Function],
              "totalCount": 100,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <span
                className="empty-overview"
>
                No DataTypes found ...
</span>,
              "className": "jumbotron",
              "role": "alert",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "No DataTypes found ...",
                "className": "empty-overview",
              },
              "ref": null,
              "rendered": "No DataTypes found ...",
              "type": "span",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "main",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
