// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Navbar Component should render a Navbar component 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Navbar
    isNavigationShown={true}
    links={
        Array [
            Object {
              "name": "test1",
              "path": "/test1",
            },
            Object {
              "name": "test2",
              "path": "/test2",
            },
          ]
    }
    toggleNavigation={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <ul
        className="nav nav-pills flex-column"
>
        <li
                className="nav-item"
                onClick={[Function]}
        >
                <Link
                        className="nav-link "
                        replace={false}
                        to="/test1"
                >
                        test1
                </Link>
        </li>
        <li
                className="nav-item"
                onClick={[Function]}
        >
                <Link
                        className="nav-link "
                        replace={false}
                        to="/test2"
                >
                        test2
                </Link>
        </li>
</ul>,
      "className": " col-sm-3 col-md-2 bg-faded sidebar",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <li
            className="nav-item"
            onClick={[Function]}
>
            <Link
                        className="nav-link "
                        replace={false}
                        to="/test1"
            >
                        test1
            </Link>
</li>,
          <li
            className="nav-item"
            onClick={[Function]}
>
            <Link
                        className="nav-link "
                        replace={false}
                        to="/test2"
            >
                        test2
            </Link>
</li>,
        ],
        "className": "nav nav-pills flex-column",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "test1",
          "nodeType": "host",
          "props": Object {
            "children": <Link
              className="nav-link "
              replace={false}
              to="/test1"
>
              test1
</Link>,
            "className": "nav-item",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "test1",
              "className": "nav-link ",
              "replace": false,
              "to": "/test1",
            },
            "ref": null,
            "rendered": "test1",
            "type": [Function],
          },
          "type": "li",
        },
        Object {
          "instance": null,
          "key": "test2",
          "nodeType": "host",
          "props": Object {
            "children": <Link
              className="nav-link "
              replace={false}
              to="/test2"
>
              test2
</Link>,
            "className": "nav-item",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "test2",
              "className": "nav-link ",
              "replace": false,
              "to": "/test2",
            },
            "ref": null,
            "rendered": "test2",
            "type": [Function],
          },
          "type": "li",
        },
      ],
      "type": "ul",
    },
    "type": "aside",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <ul
          className="nav nav-pills flex-column"
>
          <li
                    className="nav-item"
                    onClick={[Function]}
          >
                    <Link
                              className="nav-link "
                              replace={false}
                              to="/test1"
                    >
                              test1
                    </Link>
          </li>
          <li
                    className="nav-item"
                    onClick={[Function]}
          >
                    <Link
                              className="nav-link "
                              replace={false}
                              to="/test2"
                    >
                              test2
                    </Link>
          </li>
</ul>,
        "className": " col-sm-3 col-md-2 bg-faded sidebar",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <li
              className="nav-item"
              onClick={[Function]}
>
              <Link
                            className="nav-link "
                            replace={false}
                            to="/test1"
              >
                            test1
              </Link>
</li>,
            <li
              className="nav-item"
              onClick={[Function]}
>
              <Link
                            className="nav-link "
                            replace={false}
                            to="/test2"
              >
                            test2
              </Link>
</li>,
          ],
          "className": "nav nav-pills flex-column",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "test1",
            "nodeType": "host",
            "props": Object {
              "children": <Link
                className="nav-link "
                replace={false}
                to="/test1"
>
                test1
</Link>,
              "className": "nav-item",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "test1",
                "className": "nav-link ",
                "replace": false,
                "to": "/test1",
              },
              "ref": null,
              "rendered": "test1",
              "type": [Function],
            },
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "test2",
            "nodeType": "host",
            "props": Object {
              "children": <Link
                className="nav-link "
                replace={false}
                to="/test2"
>
                test2
</Link>,
              "className": "nav-item",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "test2",
                "className": "nav-link ",
                "replace": false,
                "to": "/test2",
              },
              "ref": null,
              "rendered": "test2",
              "type": [Function],
            },
            "type": "li",
          },
        ],
        "type": "ul",
      },
      "type": "aside",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Navbar Component should render a Navbar component with navigation shown 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Navbar
    isNavigationShown={true}
    links={
        Array [
            Object {
              "name": "test1",
              "path": "/test1",
            },
            Object {
              "name": "test2",
              "path": "/test2",
            },
          ]
    }
    toggleNavigation={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <ul
        className="nav nav-pills flex-column"
>
        <li
                className="nav-item"
                onClick={[Function]}
        >
                <Link
                        className="nav-link "
                        replace={false}
                        to="/test1"
                >
                        test1
                </Link>
        </li>
        <li
                className="nav-item"
                onClick={[Function]}
        >
                <Link
                        className="nav-link "
                        replace={false}
                        to="/test2"
                >
                        test2
                </Link>
        </li>
</ul>,
      "className": " col-sm-3 col-md-2 bg-faded sidebar",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <li
            className="nav-item"
            onClick={[Function]}
>
            <Link
                        className="nav-link "
                        replace={false}
                        to="/test1"
            >
                        test1
            </Link>
</li>,
          <li
            className="nav-item"
            onClick={[Function]}
>
            <Link
                        className="nav-link "
                        replace={false}
                        to="/test2"
            >
                        test2
            </Link>
</li>,
        ],
        "className": "nav nav-pills flex-column",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "test1",
          "nodeType": "host",
          "props": Object {
            "children": <Link
              className="nav-link "
              replace={false}
              to="/test1"
>
              test1
</Link>,
            "className": "nav-item",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "test1",
              "className": "nav-link ",
              "replace": false,
              "to": "/test1",
            },
            "ref": null,
            "rendered": "test1",
            "type": [Function],
          },
          "type": "li",
        },
        Object {
          "instance": null,
          "key": "test2",
          "nodeType": "host",
          "props": Object {
            "children": <Link
              className="nav-link "
              replace={false}
              to="/test2"
>
              test2
</Link>,
            "className": "nav-item",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "test2",
              "className": "nav-link ",
              "replace": false,
              "to": "/test2",
            },
            "ref": null,
            "rendered": "test2",
            "type": [Function],
          },
          "type": "li",
        },
      ],
      "type": "ul",
    },
    "type": "aside",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <ul
          className="nav nav-pills flex-column"
>
          <li
                    className="nav-item"
                    onClick={[Function]}
          >
                    <Link
                              className="nav-link "
                              replace={false}
                              to="/test1"
                    >
                              test1
                    </Link>
          </li>
          <li
                    className="nav-item"
                    onClick={[Function]}
          >
                    <Link
                              className="nav-link "
                              replace={false}
                              to="/test2"
                    >
                              test2
                    </Link>
          </li>
</ul>,
        "className": " col-sm-3 col-md-2 bg-faded sidebar",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <li
              className="nav-item"
              onClick={[Function]}
>
              <Link
                            className="nav-link "
                            replace={false}
                            to="/test1"
              >
                            test1
              </Link>
</li>,
            <li
              className="nav-item"
              onClick={[Function]}
>
              <Link
                            className="nav-link "
                            replace={false}
                            to="/test2"
              >
                            test2
              </Link>
</li>,
          ],
          "className": "nav nav-pills flex-column",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "test1",
            "nodeType": "host",
            "props": Object {
              "children": <Link
                className="nav-link "
                replace={false}
                to="/test1"
>
                test1
</Link>,
              "className": "nav-item",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "test1",
                "className": "nav-link ",
                "replace": false,
                "to": "/test1",
              },
              "ref": null,
              "rendered": "test1",
              "type": [Function],
            },
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "test2",
            "nodeType": "host",
            "props": Object {
              "children": <Link
                className="nav-link "
                replace={false}
                to="/test2"
>
                test2
</Link>,
              "className": "nav-item",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "test2",
                "className": "nav-link ",
                "replace": false,
                "to": "/test2",
              },
              "ref": null,
              "rendered": "test2",
              "type": [Function],
            },
            "type": "li",
          },
        ],
        "type": "ul",
      },
      "type": "aside",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
