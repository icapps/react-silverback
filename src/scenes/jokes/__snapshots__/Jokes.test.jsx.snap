// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Jokes View It should render 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Jokes />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <p
          className="app-jokes"
>
          <Button
                    ahref=""
                    link=""
                    onClickCallback={[Function]}
                    theme="secondary"
          >
                    Tell me a joke!
          </Button>
</p>,
        <p
          className="app-joke"
>
          Waiting for a joke ðŸ’©
</p>,
        undefined,
        <p
          className="back-home"
>
          <Button
                    ahref=""
                    link="/"
                    onClickCallback={[Function]}
                    theme="primary"
          >
                    Take me home
          </Button>
</p>,
      ],
      "className": "app",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Button
            ahref=""
            link=""
            onClickCallback={[Function]}
            theme="secondary"
>
            Tell me a joke!
</Button>,
          "className": "app-jokes",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "ahref": "",
            "children": "Tell me a joke!",
            "link": "",
            "onClickCallback": [Function],
            "theme": "secondary",
          },
          "ref": null,
          "rendered": "Tell me a joke!",
          "type": [Function],
        },
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Waiting for a joke ðŸ’©",
          "className": "app-joke",
        },
        "ref": null,
        "rendered": "Waiting for a joke ðŸ’©",
        "type": "p",
      },
      undefined,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Button
            ahref=""
            link="/"
            onClickCallback={[Function]}
            theme="primary"
>
            Take me home
</Button>,
          "className": "back-home",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "ahref": "",
            "children": "Take me home",
            "link": "/",
            "onClickCallback": [Function],
            "theme": "primary",
          },
          "ref": null,
          "rendered": "Take me home",
          "type": [Function],
        },
        "type": "p",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <p
            className="app-jokes"
>
            <Button
                        ahref=""
                        link=""
                        onClickCallback={[Function]}
                        theme="secondary"
            >
                        Tell me a joke!
            </Button>
</p>,
          <p
            className="app-joke"
>
            Waiting for a joke ðŸ’©
</p>,
          undefined,
          <p
            className="back-home"
>
            <Button
                        ahref=""
                        link="/"
                        onClickCallback={[Function]}
                        theme="primary"
            >
                        Take me home
            </Button>
</p>,
        ],
        "className": "app",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Button
              ahref=""
              link=""
              onClickCallback={[Function]}
              theme="secondary"
>
              Tell me a joke!
</Button>,
            "className": "app-jokes",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "ahref": "",
              "children": "Tell me a joke!",
              "link": "",
              "onClickCallback": [Function],
              "theme": "secondary",
            },
            "ref": null,
            "rendered": "Tell me a joke!",
            "type": [Function],
          },
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Waiting for a joke ðŸ’©",
            "className": "app-joke",
          },
          "ref": null,
          "rendered": "Waiting for a joke ðŸ’©",
          "type": "p",
        },
        undefined,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Button
              ahref=""
              link="/"
              onClickCallback={[Function]}
              theme="primary"
>
              Take me home
</Button>,
            "className": "back-home",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "ahref": "",
              "children": "Take me home",
              "link": "/",
              "onClickCallback": [Function],
              "theme": "primary",
            },
            "ref": null,
            "rendered": "Take me home",
            "type": [Function],
          },
          "type": "p",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
